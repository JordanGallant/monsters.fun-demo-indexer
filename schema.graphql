type Monster {
    id: ID! # Token Address
    supply: BigInt!
    price: BigInt!
    marketCap: BigInt!
    trades: [Trade!]! @derivedFrom(field: "token")
    # experiencePoints: BigInt! # XP Calculation
    # marketCapChange: Float! # 24-hour Market Cap Change (%)
    # volume: BigInt! # 24-hour Volume
}

type Trade {
    id: ID! # txHash-logIndex
    txHash: String! 
    logIndex: Int!
    token: String! 
    trader: String! @index
    isBuy: Boolean!
    amount: BigInt! @index
    ethAmount: BigInt! @index
    blockTimestamp: BigInt! @index # Timestamp for 24-hour Data Queries
}

type Trader {
    id: ID! # Account Address
    trades: [Trade!]! @derivedFrom(field: "trader")
    numberOfTrades: Int!
    # quantity: BigInt!
    # holdings: [Monsters!]! # Many-to-Many Relationship
    # lifetimePnL: Float! # Lifetime Profit/Loss from Trades
}
